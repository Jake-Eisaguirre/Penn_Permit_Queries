---
title: "Queries"
format: html
editor: source
---

## Load Packages
```{r}

if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}

librarian::shelf(tidyverse, here, DBI, RPostgres)

```

## Connect to Database
```{r}

tryCatch({
    drv <- dbDriver("Postgres")
    print("Connecting to Databaseâ€¦")
    connection <- dbConnect(drv,
                 dbname = Sys.getenv("aws_dbname"),
                 host = Sys.getenv("aws_host"),
                 port = Sys.getenv("aws_port"),
                 user = Sys.getenv("aws_user"),
                 password = Sys.getenv("aws_password"),
                 timezone=NULL)
    print("Database Connected!")
    },
    error=function(cond) {
            print("Unable to connect to Database.")
    })

#search path
dbExecute(connection, "set search_path to survey_data")

```

## Permit Counts

### Query Data
```{r}

q <- "select r.region, s.site, v.date, s2.detection_type, c.species_capture
      from region r
      join site s on r.region_id = s.region_id
      join visit v on s.site_id = v.site_id
      join survey s2 on v.visit_id = s2.visit_id
      join capture c on s2.survey_id = c.survey_id
      where r.region = 'pennsylvania'
      and v.date >= '2022-10-01'
      and v.date <= '2023-09-30';"

raw_data <- dbGetQuery(connection, q)


```

### Summarize 
```{r}

raw_data %>% 
  group_by(species_capture) %>% 
  reframe(n = n())

```
## `crispr_id` Info

### Query
```{r}

c_q <- "select r.region, s.site, v.date, s2.detection_type, c.species_capture, c.bd_swab_id, c.crispr_id
      from region r
      join site s on r.region_id = s.region_id
      join visit v on s.site_id = v.site_id
      join survey s2 on v.visit_id = s2.visit_id
      join capture c on s2.survey_id = c.survey_id
      where r.region = 'pennsylvania'
      and c.crispr_id is not null;"

crispr_meta <- dbGetQuery(connection, c_q)

```

```{r}

crispr_meta
  
```

